{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Interface for the object representation of a Result.\n */\nexport interface ResultObject<T> {\n\tisSuccess: boolean;\n\tvalue: T;\n\terror: string;\n\tstatusCode: number;\n}\n\n/**\n * The Result class is a utility for handling success and failure scenarios.\n * It uses generics to allow for flexibility in the type of value it can hold.\n * This class is primarily used for server actions that need to return an object with the status,\n * not just the status itself.\n */\nexport class Result<T> {\n\tpublic readonly value: T;\n\n\tpublic readonly isSuccess: boolean;\n\n\tpublic readonly error: string;\n\n\tpublic readonly statusCode: number;\n\n\t/**\n\t * Private constructor for the Result class.\n\t */\n\tprivate constructor(value: T, isSuccess: boolean, error: string, statusCode: number) {\n\t\tthis.value = value;\n\t\tthis.isSuccess = isSuccess;\n\t\tthis.error = error;\n\t\tthis.statusCode = statusCode;\n\t}\n\n\t/**\n\t * Creates a success Result.\n\t * By default, the statusCode is 200 unless otherwise specified.\n\t * @param value The value of the Result.\n\t * @param statusCode The status code of the Result. Defaults to 200.\n\t * @returns A Result object indicating success.\n\t */\n\tpublic static success<T>(value: T, statusCode: number = 200): Result<T> {\n\t\treturn new Result<T>(value, true, \"\", statusCode);\n\t}\n\n\t/**\n\t * Creates a failure Result.\n\t * By default, the statusCode is 400 unless otherwise specified.\n\t * @param error The error message.\n\t * @param statusCode The status code of the Result. Defaults to 400.\n\t * @returns A Result object indicating failure.\n\t */\n\tpublic static failure<T>(error: string, statusCode: number = 400): Result<T> {\n\t\treturn new Result<T>(undefined as unknown as T, false, error, statusCode);\n\t}\n\n\t/**\n\t * Converts the Result to an object.\n\t * This is primarily used for server actions NEXTJS that need to return an object with the status,\n\t * not just the status itself.\n\t * @returns An object representation of the Result.\n\t */\n\tpublic toObject(): ResultObject<T> {\n\t\treturn {\n\t\t\tisSuccess: this.isSuccess,\n\t\t\tvalue: this.value,\n\t\t\terror: this.error,\n\t\t\tstatusCode: this.statusCode,\n\t\t};\n\t}\n\n\t/**\n\t * Creates a Result from an object.\n\t * @param obj The object to convert to a Result.\n\t * @returns A Result object.\n\t */\n\tpublic static fromObject<T>(obj: ResultObject<T>): Result<T> {\n\t\treturn new Result<T>(obj.value, obj.isSuccess, obj.error, obj.statusCode);\n\t}\n}"],"names":["Result","value","isSuccess","error","statusCode","this","success","failure","undefined","prototype","toObject","fromObject","obj"],"mappings":"+PAgBmB,WAYlB,SAAAA,EAAoBC,EAAUC,EAAoBC,EAAeC,GAXjDH,KAAAA,kBAEAC,eAAS,EAAAG,KAETF,WAEAC,EAAAA,KAAAA,kBAMfC,KAAKJ,MAAQA,EACbI,KAAKH,UAAYA,EACjBG,KAAKF,MAAQA,EACbE,KAAKD,WAAaA,CACnB,QAACJ,EASaM,QAAP,SAAkBL,EAAUG,GAClC,gBADkCA,IAAAA,EAAqB,KAChD,IAAIJ,EAAUC,GAAO,EAAM,GAAIG,EACvC,EAACJ,EASaO,QAAP,SAAkBJ,EAAeC,GACvC,YADuCA,IAAAA,IAAAA,EAAqB,KACrD,IAAIJ,OAAUQ,GAA2B,EAAOL,EAAOC,EAC/D,EAACJ,EAAAS,UAQMC,SAAA,WACN,MAAO,CACNR,UAAWG,KAAKH,UAChBD,MAAOI,KAAKJ,MACZE,MAAOE,KAAKF,MACZC,WAAYC,KAAKD,WAEnB,EAACJ,EAOaW,WAAP,SAAqBC,GAC3B,WAAWZ,EAAUY,EAAIX,MAAOW,EAAIV,UAAWU,EAAIT,MAAOS,EAAIR,WAC/D,EAACJ,CAAA,CA/DiB"}